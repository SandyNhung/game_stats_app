{
  "{\"sourceRoot\":\"/home/nhung/Desktop/reactjs/game_stats_app/nodejs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/nhung/Desktop/reactjs/game_stats_app/nodejs\",\"filename\":\"/home/nhung/Desktop/reactjs/game_stats_app/nodejs/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/nhung/Desktop/reactjs/game_stats_app/nodejs\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs",
      "filename": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs/server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _expressGraphql = _interopRequireDefault(require(\"express-graphql\"));\n\nvar _schema = _interopRequireDefault(require(\"./schema/schema\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//Create an express server and a GraphQL endpoint\nvar app = (0, _express[\"default\"])(); //allow cors cross-origin requests\n\napp.use((0, _cors[\"default\"])());\napp.use('/graphql', (0, _expressGraphql[\"default\"])({\n  schema: _schema[\"default\"],\n  graphiql: true\n}));\napp.listen(4000, function () {\n  return console.log('Express GraphQL Serve Now running on localhost:4000/graphql');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJzY2hlbWEiLCJncmFwaGlxbCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQTtBQUNBLElBQU1BLEdBQUcsR0FBRywwQkFBWixDLENBRUE7O0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLHVCQUFSO0FBRUFELEdBQUcsQ0FBQ0MsR0FBSixDQUNJLFVBREosRUFFSSxnQ0FBZ0I7QUFDWkMsRUFBQUEsTUFBTSxFQUFOQSxrQkFEWTtBQUVaQyxFQUFBQSxRQUFRLEVBQUU7QUFGRSxDQUFoQixDQUZKO0FBUUFILEdBQUcsQ0FBQ0ksTUFBSixDQUFXLElBQVgsRUFBaUI7QUFBQSxTQUNiQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSw2REFBWixDQURhO0FBQUEsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvbmh1bmcvRGVza3RvcC9yZWFjdGpzL2dhbWVfc3RhdHNfYXBwL25vZGVqcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycyc7XG5pbXBvcnQgZXhwcmVzc19ncmFwaHFsIGZyb20gJ2V4cHJlc3MtZ3JhcGhxbCc7XG5pbXBvcnQgc2NoZW1hIGZyb20gJy4vc2NoZW1hL3NjaGVtYSc7XG5cbi8vQ3JlYXRlIGFuIGV4cHJlc3Mgc2VydmVyIGFuZCBhIEdyYXBoUUwgZW5kcG9pbnRcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuLy9hbGxvdyBjb3JzIGNyb3NzLW9yaWdpbiByZXF1ZXN0c1xuYXBwLnVzZShjb3JzKCkpO1xuXG5hcHAudXNlKFxuICAgICcvZ3JhcGhxbCcsXG4gICAgZXhwcmVzc19ncmFwaHFsKHtcbiAgICAgICAgc2NoZW1hLFxuICAgICAgICBncmFwaGlxbDogdHJ1ZVxuICAgIH0pXG4pO1xuXG5hcHAubGlzdGVuKDQwMDAsICgpID0+XG4gICAgY29uc29sZS5sb2coJ0V4cHJlc3MgR3JhcGhRTCBTZXJ2ZSBOb3cgcnVubmluZyBvbiBsb2NhbGhvc3Q6NDAwMC9ncmFwaHFsJylcbik7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "schema",
        "graphiql",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;;;AAEA;AACA,IAAMA,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,uBAAR;AAEAD,GAAG,CAACC,GAAJ,CACI,UADJ,EAEI,gCAAgB;AACZC,EAAAA,MAAM,EAANA,kBADY;AAEZC,EAAAA,QAAQ,EAAE;AAFE,CAAhB,CAFJ;AAQAH,GAAG,CAACI,MAAJ,CAAW,IAAX,EAAiB;AAAA,SACbC,OAAO,CAACC,GAAR,CAAY,6DAAZ,CADa;AAAA,CAAjB",
      "sourceRoot": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs",
      "sourcesContent": [
        "import express from 'express';\nimport cors from 'cors';\nimport express_graphql from 'express-graphql';\nimport schema from './schema/schema';\n\n//Create an express server and a GraphQL endpoint\nconst app = express();\n\n//allow cors cross-origin requests\napp.use(cors());\n\napp.use(\n    '/graphql',\n    express_graphql({\n        schema,\n        graphiql: true\n    })\n);\n\napp.listen(4000, () =>\n    console.log('Express GraphQL Serve Now running on localhost:4000/graphql')\n);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573216691600
  },
  "{\"sourceRoot\":\"/home/nhung/Desktop/reactjs/game_stats_app/nodejs/schema\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/nhung/Desktop/reactjs/game_stats_app/nodejs\",\"filename\":\"/home/nhung/Desktop/reactjs/game_stats_app/nodejs/schema/schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/nhung/Desktop/reactjs/game_stats_app/nodejs\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs/schema",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs",
      "filename": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs/schema/schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs/schema/schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs/schema/schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs/schema",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _graphql = require(\"graphql\");\n\nvar _champion = _interopRequireDefault(require(\"./type/champion\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _config = require(\"../config\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//GraphQL schema\nvar summonerName = new _graphql.GraphQLObjectType({\n  name: 'SummonerName',\n  fields: function fields() {\n    return {\n      name: {\n        type: _graphql.GraphQLString\n      },\n      accountId: {\n        type: _graphql.GraphQLString\n      }\n    };\n  }\n});\nvar regionData = ['BR1', 'EUN1', 'EUW1', 'JP1', 'KR', 'LA1', 'LA2', 'NA1', 'OC1', 'TR1', 'RU'];\nvar regions = new _graphql.GraphQLList(_graphql.GraphQLString);\nvar queryType = new _graphql.GraphQLObjectType({\n  name: 'Query',\n  fields: {\n    summoner: {\n      type: summonerName,\n      args: {\n        name: {\n          type: _graphql.GraphQLString\n        },\n        region: {\n          type: _graphql.GraphQLString\n        }\n      },\n      resolve: function resolve(root, args) {\n        return _axios[\"default\"].get(\"https://\".concat(args.region, \".api.riotgames.com/lol/summoner/v4/summoners/by-name/\").concat(args.name, \"?api_key=\").concat(_config.riotApiKey)).then(function (res) {\n          console.log(res.data);\n          return res.data;\n        });\n      }\n    },\n    regions: {\n      type: regions,\n      resolve: function resolve() {\n        console.log(regionData);\n        return regionData;\n      }\n    },\n    champion: {\n      type: _champion[\"default\"],\n      args: {\n        name: {\n          type: _graphql.GraphQLString\n        },\n        key: {\n          type: _graphql.GraphQLString\n        }\n      },\n      resolve: function resolve(root, args) {\n        return _axios[\"default\"].get('http://ddragon.leagueoflegends.com/cdn/9.21.1/data/en_US/champion.json').then(function (res) {\n          return Object.values(res.data.data).find(function (e) {\n            return e.key === args.key;\n          });\n        });\n      }\n    },\n    champions: {\n      type: new _graphql.GraphQLList(_champion[\"default\"]),\n      resolve: function resolve(root, args) {\n        return _axios[\"default\"].get(\"http://ddragon.leagueoflegends.com/cdn/9.21.1/data/en_US/champion.json\").then(function (res) {\n          return Object.values(res.data.data);\n        });\n      }\n    }\n  }\n});\n\nvar _default = new _graphql.GraphQLSchema({\n  query: queryType\n});\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJzdW1tb25lck5hbWUiLCJHcmFwaFFMT2JqZWN0VHlwZSIsIm5hbWUiLCJmaWVsZHMiLCJ0eXBlIiwiR3JhcGhRTFN0cmluZyIsImFjY291bnRJZCIsInJlZ2lvbkRhdGEiLCJyZWdpb25zIiwiR3JhcGhRTExpc3QiLCJxdWVyeVR5cGUiLCJzdW1tb25lciIsImFyZ3MiLCJyZWdpb24iLCJyZXNvbHZlIiwicm9vdCIsImF4aW9zIiwiZ2V0IiwicmlvdEFwaUtleSIsInRoZW4iLCJyZXMiLCJjb25zb2xlIiwibG9nIiwiZGF0YSIsImNoYW1waW9uIiwia2V5IiwiT2JqZWN0IiwidmFsdWVzIiwiZmluZCIsImUiLCJjaGFtcGlvbnMiLCJHcmFwaFFMU2NoZW1hIiwicXVlcnkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFNQTs7QUFDQTs7QUFDQTs7OztBQUVBO0FBQ0EsSUFBTUEsWUFBWSxHQUFHLElBQUlDLDBCQUFKLENBQXNCO0FBQ3ZDQyxFQUFBQSxJQUFJLEVBQUUsY0FEaUM7QUFFdkNDLEVBQUFBLE1BQU0sRUFBRTtBQUFBLFdBQU87QUFDWEQsTUFBQUEsSUFBSSxFQUFFO0FBQUVFLFFBQUFBLElBQUksRUFBRUM7QUFBUixPQURLO0FBRVhDLE1BQUFBLFNBQVMsRUFBRTtBQUFFRixRQUFBQSxJQUFJLEVBQUVDO0FBQVI7QUFGQSxLQUFQO0FBQUE7QUFGK0IsQ0FBdEIsQ0FBckI7QUFPQSxJQUFNRSxVQUFVLEdBQUcsQ0FDZixLQURlLEVBRWYsTUFGZSxFQUdmLE1BSGUsRUFJZixLQUplLEVBS2YsSUFMZSxFQU1mLEtBTmUsRUFPZixLQVBlLEVBUWYsS0FSZSxFQVNmLEtBVGUsRUFVZixLQVZlLEVBV2YsSUFYZSxDQUFuQjtBQWFBLElBQU1DLE9BQU8sR0FBRyxJQUFJQyxvQkFBSixDQUFnQkosc0JBQWhCLENBQWhCO0FBRUEsSUFBTUssU0FBUyxHQUFHLElBQUlULDBCQUFKLENBQXNCO0FBQ3BDQyxFQUFBQSxJQUFJLEVBQUUsT0FEOEI7QUFFcENDLEVBQUFBLE1BQU0sRUFBRTtBQUNKUSxJQUFBQSxRQUFRLEVBQUU7QUFDTlAsTUFBQUEsSUFBSSxFQUFFSixZQURBO0FBRU5ZLE1BQUFBLElBQUksRUFBRTtBQUNGVixRQUFBQSxJQUFJLEVBQUU7QUFBRUUsVUFBQUEsSUFBSSxFQUFFQztBQUFSLFNBREo7QUFFRlEsUUFBQUEsTUFBTSxFQUFFO0FBQUVULFVBQUFBLElBQUksRUFBRUM7QUFBUjtBQUZOLE9BRkE7QUFNTlMsTUFBQUEsT0FBTyxFQUFFLGlCQUFDQyxJQUFELEVBQU9ILElBQVA7QUFBQSxlQUNMSSxrQkFDS0MsR0FETCxtQkFFbUJMLElBQUksQ0FBQ0MsTUFGeEIsa0VBRXNGRCxJQUFJLENBQUNWLElBRjNGLHNCQUUyR2dCLGtCQUYzRyxHQUlLQyxJQUpMLENBSVUsVUFBQUMsR0FBRyxFQUFJO0FBQ1RDLFVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixHQUFHLENBQUNHLElBQWhCO0FBQ0EsaUJBQU9ILEdBQUcsQ0FBQ0csSUFBWDtBQUNILFNBUEwsQ0FESztBQUFBO0FBTkgsS0FETjtBQWlCSmYsSUFBQUEsT0FBTyxFQUFFO0FBQ0xKLE1BQUFBLElBQUksRUFBRUksT0FERDtBQUVMTSxNQUFBQSxPQUFPLEVBQUUsbUJBQU07QUFDWE8sUUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlmLFVBQVo7QUFDQSxlQUFPQSxVQUFQO0FBQ0g7QUFMSSxLQWpCTDtBQXdCSmlCLElBQUFBLFFBQVEsRUFBRTtBQUNOcEIsTUFBQUEsSUFBSSxFQUFFb0Isb0JBREE7QUFFTlosTUFBQUEsSUFBSSxFQUFFO0FBQ0ZWLFFBQUFBLElBQUksRUFBRTtBQUFFRSxVQUFBQSxJQUFJLEVBQUVDO0FBQVIsU0FESjtBQUVGb0IsUUFBQUEsR0FBRyxFQUFFO0FBQUVyQixVQUFBQSxJQUFJLEVBQUVDO0FBQVI7QUFGSCxPQUZBO0FBTU5TLE1BQUFBLE9BQU8sRUFBRSxpQkFBQ0MsSUFBRCxFQUFPSCxJQUFQO0FBQUEsZUFDTEksa0JBQ0tDLEdBREwsQ0FFUSx3RUFGUixFQUlLRSxJQUpMLENBSVUsVUFBQUMsR0FBRyxFQUFJO0FBQ1QsaUJBQU9NLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjUCxHQUFHLENBQUNHLElBQUosQ0FBU0EsSUFBdkIsRUFBNkJLLElBQTdCLENBQ0gsVUFBQUMsQ0FBQztBQUFBLG1CQUFJQSxDQUFDLENBQUNKLEdBQUYsS0FBVWIsSUFBSSxDQUFDYSxHQUFuQjtBQUFBLFdBREUsQ0FBUDtBQUdILFNBUkwsQ0FESztBQUFBO0FBTkgsS0F4Qk47QUF5Q0pLLElBQUFBLFNBQVMsRUFBRTtBQUNQMUIsTUFBQUEsSUFBSSxFQUFFLElBQUlLLG9CQUFKLENBQWdCZSxvQkFBaEIsQ0FEQztBQUVQVixNQUFBQSxPQUFPLEVBQUUsaUJBQUNDLElBQUQsRUFBT0gsSUFBUDtBQUFBLGVBQ0xJLGtCQUNLQyxHQURMLDJFQUlLRSxJQUpMLENBSVUsVUFBQUMsR0FBRyxFQUFJO0FBQ1QsaUJBQU9NLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjUCxHQUFHLENBQUNHLElBQUosQ0FBU0EsSUFBdkIsQ0FBUDtBQUNILFNBTkwsQ0FESztBQUFBO0FBRkY7QUF6Q1A7QUFGNEIsQ0FBdEIsQ0FBbEI7O2VBeURlLElBQUlRLHNCQUFKLENBQWtCO0FBQzdCQyxFQUFBQSxLQUFLLEVBQUV0QjtBQURzQixDQUFsQixDIiwic291cmNlUm9vdCI6Ii9ob21lL25odW5nL0Rlc2t0b3AvcmVhY3Rqcy9nYW1lX3N0YXRzX2FwcC9ub2RlanMvc2NoZW1hIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBHcmFwaFFMT2JqZWN0VHlwZSxcbiAgICBHcmFwaFFMU3RyaW5nLFxuICAgIEdyYXBoUUxMaXN0LFxuICAgIEdyYXBoUUxTY2hlbWFcbn0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgY2hhbXBpb24gZnJvbSAnLi90eXBlL2NoYW1waW9uJztcbmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5pbXBvcnQgeyByaW90QXBpS2V5IH0gZnJvbSAnLi4vY29uZmlnJztcblxuLy9HcmFwaFFMIHNjaGVtYVxuY29uc3Qgc3VtbW9uZXJOYW1lID0gbmV3IEdyYXBoUUxPYmplY3RUeXBlKHtcbiAgICBuYW1lOiAnU3VtbW9uZXJOYW1lJyxcbiAgICBmaWVsZHM6ICgpID0+ICh7XG4gICAgICAgIG5hbWU6IHsgdHlwZTogR3JhcGhRTFN0cmluZyB9LFxuICAgICAgICBhY2NvdW50SWQ6IHsgdHlwZTogR3JhcGhRTFN0cmluZyB9XG4gICAgfSlcbn0pO1xuY29uc3QgcmVnaW9uRGF0YSA9IFtcbiAgICAnQlIxJyxcbiAgICAnRVVOMScsXG4gICAgJ0VVVzEnLFxuICAgICdKUDEnLFxuICAgICdLUicsXG4gICAgJ0xBMScsXG4gICAgJ0xBMicsXG4gICAgJ05BMScsXG4gICAgJ09DMScsXG4gICAgJ1RSMScsXG4gICAgJ1JVJ1xuXTtcbmNvbnN0IHJlZ2lvbnMgPSBuZXcgR3JhcGhRTExpc3QoR3JhcGhRTFN0cmluZyk7XG5cbmNvbnN0IHF1ZXJ5VHlwZSA9IG5ldyBHcmFwaFFMT2JqZWN0VHlwZSh7XG4gICAgbmFtZTogJ1F1ZXJ5JyxcbiAgICBmaWVsZHM6IHtcbiAgICAgICAgc3VtbW9uZXI6IHtcbiAgICAgICAgICAgIHR5cGU6IHN1bW1vbmVyTmFtZSxcbiAgICAgICAgICAgIGFyZ3M6IHtcbiAgICAgICAgICAgICAgICBuYW1lOiB7IHR5cGU6IEdyYXBoUUxTdHJpbmcgfSxcbiAgICAgICAgICAgICAgICByZWdpb246IHsgdHlwZTogR3JhcGhRTFN0cmluZyB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmVzb2x2ZTogKHJvb3QsIGFyZ3MpID0+XG4gICAgICAgICAgICAgICAgYXhpb3NcbiAgICAgICAgICAgICAgICAgICAgLmdldChcbiAgICAgICAgICAgICAgICAgICAgICAgIGBodHRwczovLyR7YXJncy5yZWdpb259LmFwaS5yaW90Z2FtZXMuY29tL2xvbC9zdW1tb25lci92NC9zdW1tb25lcnMvYnktbmFtZS8ke2FyZ3MubmFtZX0/YXBpX2tleT0ke3Jpb3RBcGlLZXl9YFxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmRhdGE7XG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgIH0sXG4gICAgICAgIHJlZ2lvbnM6IHtcbiAgICAgICAgICAgIHR5cGU6IHJlZ2lvbnMsXG4gICAgICAgICAgICByZXNvbHZlOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVnaW9uRGF0YSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2lvbkRhdGE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGNoYW1waW9uOiB7XG4gICAgICAgICAgICB0eXBlOiBjaGFtcGlvbixcbiAgICAgICAgICAgIGFyZ3M6IHtcbiAgICAgICAgICAgICAgICBuYW1lOiB7IHR5cGU6IEdyYXBoUUxTdHJpbmcgfSxcbiAgICAgICAgICAgICAgICBrZXk6IHsgdHlwZTogR3JhcGhRTFN0cmluZyB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmVzb2x2ZTogKHJvb3QsIGFyZ3MpID0+XG4gICAgICAgICAgICAgICAgYXhpb3NcbiAgICAgICAgICAgICAgICAgICAgLmdldChcbiAgICAgICAgICAgICAgICAgICAgICAgICdodHRwOi8vZGRyYWdvbi5sZWFndWVvZmxlZ2VuZHMuY29tL2Nkbi85LjIxLjEvZGF0YS9lbl9VUy9jaGFtcGlvbi5qc29uJ1xuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyhyZXMuZGF0YS5kYXRhKS5maW5kKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUgPT4gZS5rZXkgPT09IGFyZ3Mua2V5XG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICB9LFxuICAgICAgICBjaGFtcGlvbnM6IHtcbiAgICAgICAgICAgIHR5cGU6IG5ldyBHcmFwaFFMTGlzdChjaGFtcGlvbiksXG4gICAgICAgICAgICByZXNvbHZlOiAocm9vdCwgYXJncykgPT5cbiAgICAgICAgICAgICAgICBheGlvc1xuICAgICAgICAgICAgICAgICAgICAuZ2V0KFxuICAgICAgICAgICAgICAgICAgICAgICAgYGh0dHA6Ly9kZHJhZ29uLmxlYWd1ZW9mbGVnZW5kcy5jb20vY2RuLzkuMjEuMS9kYXRhL2VuX1VTL2NoYW1waW9uLmpzb25gXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBPYmplY3QudmFsdWVzKHJlcy5kYXRhLmRhdGEpO1xuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IG5ldyBHcmFwaFFMU2NoZW1hKHtcbiAgICBxdWVyeTogcXVlcnlUeXBlXG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "summonerName",
        "GraphQLObjectType",
        "name",
        "fields",
        "type",
        "GraphQLString",
        "accountId",
        "regionData",
        "regions",
        "GraphQLList",
        "queryType",
        "summoner",
        "args",
        "region",
        "resolve",
        "root",
        "axios",
        "get",
        "riotApiKey",
        "then",
        "res",
        "console",
        "log",
        "data",
        "champion",
        "key",
        "Object",
        "values",
        "find",
        "e",
        "champions",
        "GraphQLSchema",
        "query"
      ],
      "mappings": ";;;;;;;AAAA;;AAMA;;AACA;;AACA;;;;AAEA;AACA,IAAMA,YAAY,GAAG,IAAIC,0BAAJ,CAAsB;AACvCC,EAAAA,IAAI,EAAE,cADiC;AAEvCC,EAAAA,MAAM,EAAE;AAAA,WAAO;AACXD,MAAAA,IAAI,EAAE;AAAEE,QAAAA,IAAI,EAAEC;AAAR,OADK;AAEXC,MAAAA,SAAS,EAAE;AAAEF,QAAAA,IAAI,EAAEC;AAAR;AAFA,KAAP;AAAA;AAF+B,CAAtB,CAArB;AAOA,IAAME,UAAU,GAAG,CACf,KADe,EAEf,MAFe,EAGf,MAHe,EAIf,KAJe,EAKf,IALe,EAMf,KANe,EAOf,KAPe,EAQf,KARe,EASf,KATe,EAUf,KAVe,EAWf,IAXe,CAAnB;AAaA,IAAMC,OAAO,GAAG,IAAIC,oBAAJ,CAAgBJ,sBAAhB,CAAhB;AAEA,IAAMK,SAAS,GAAG,IAAIT,0BAAJ,CAAsB;AACpCC,EAAAA,IAAI,EAAE,OAD8B;AAEpCC,EAAAA,MAAM,EAAE;AACJQ,IAAAA,QAAQ,EAAE;AACNP,MAAAA,IAAI,EAAEJ,YADA;AAENY,MAAAA,IAAI,EAAE;AACFV,QAAAA,IAAI,EAAE;AAAEE,UAAAA,IAAI,EAAEC;AAAR,SADJ;AAEFQ,QAAAA,MAAM,EAAE;AAAET,UAAAA,IAAI,EAAEC;AAAR;AAFN,OAFA;AAMNS,MAAAA,OAAO,EAAE,iBAACC,IAAD,EAAOH,IAAP;AAAA,eACLI,kBACKC,GADL,mBAEmBL,IAAI,CAACC,MAFxB,kEAEsFD,IAAI,CAACV,IAF3F,sBAE2GgB,kBAF3G,GAIKC,IAJL,CAIU,UAAAC,GAAG,EAAI;AACTC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACA,iBAAOH,GAAG,CAACG,IAAX;AACH,SAPL,CADK;AAAA;AANH,KADN;AAiBJf,IAAAA,OAAO,EAAE;AACLJ,MAAAA,IAAI,EAAEI,OADD;AAELM,MAAAA,OAAO,EAAE,mBAAM;AACXO,QAAAA,OAAO,CAACC,GAAR,CAAYf,UAAZ;AACA,eAAOA,UAAP;AACH;AALI,KAjBL;AAwBJiB,IAAAA,QAAQ,EAAE;AACNpB,MAAAA,IAAI,EAAEoB,oBADA;AAENZ,MAAAA,IAAI,EAAE;AACFV,QAAAA,IAAI,EAAE;AAAEE,UAAAA,IAAI,EAAEC;AAAR,SADJ;AAEFoB,QAAAA,GAAG,EAAE;AAAErB,UAAAA,IAAI,EAAEC;AAAR;AAFH,OAFA;AAMNS,MAAAA,OAAO,EAAE,iBAACC,IAAD,EAAOH,IAAP;AAAA,eACLI,kBACKC,GADL,CAEQ,wEAFR,EAIKE,IAJL,CAIU,UAAAC,GAAG,EAAI;AACT,iBAAOM,MAAM,CAACC,MAAP,CAAcP,GAAG,CAACG,IAAJ,CAASA,IAAvB,EAA6BK,IAA7B,CACH,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACJ,GAAF,KAAUb,IAAI,CAACa,GAAnB;AAAA,WADE,CAAP;AAGH,SARL,CADK;AAAA;AANH,KAxBN;AAyCJK,IAAAA,SAAS,EAAE;AACP1B,MAAAA,IAAI,EAAE,IAAIK,oBAAJ,CAAgBe,oBAAhB,CADC;AAEPV,MAAAA,OAAO,EAAE,iBAACC,IAAD,EAAOH,IAAP;AAAA,eACLI,kBACKC,GADL,2EAIKE,IAJL,CAIU,UAAAC,GAAG,EAAI;AACT,iBAAOM,MAAM,CAACC,MAAP,CAAcP,GAAG,CAACG,IAAJ,CAASA,IAAvB,CAAP;AACH,SANL,CADK;AAAA;AAFF;AAzCP;AAF4B,CAAtB,CAAlB;;eAyDe,IAAIQ,sBAAJ,CAAkB;AAC7BC,EAAAA,KAAK,EAAEtB;AADsB,CAAlB,C",
      "sourceRoot": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs/schema",
      "sourcesContent": [
        "import {\n    GraphQLObjectType,\n    GraphQLString,\n    GraphQLList,\n    GraphQLSchema\n} from 'graphql';\nimport champion from './type/champion';\nimport axios from 'axios';\nimport { riotApiKey } from '../config';\n\n//GraphQL schema\nconst summonerName = new GraphQLObjectType({\n    name: 'SummonerName',\n    fields: () => ({\n        name: { type: GraphQLString },\n        accountId: { type: GraphQLString }\n    })\n});\nconst regionData = [\n    'BR1',\n    'EUN1',\n    'EUW1',\n    'JP1',\n    'KR',\n    'LA1',\n    'LA2',\n    'NA1',\n    'OC1',\n    'TR1',\n    'RU'\n];\nconst regions = new GraphQLList(GraphQLString);\n\nconst queryType = new GraphQLObjectType({\n    name: 'Query',\n    fields: {\n        summoner: {\n            type: summonerName,\n            args: {\n                name: { type: GraphQLString },\n                region: { type: GraphQLString }\n            },\n            resolve: (root, args) =>\n                axios\n                    .get(\n                        `https://${args.region}.api.riotgames.com/lol/summoner/v4/summoners/by-name/${args.name}?api_key=${riotApiKey}`\n                    )\n                    .then(res => {\n                        console.log(res.data);\n                        return res.data;\n                    })\n        },\n        regions: {\n            type: regions,\n            resolve: () => {\n                console.log(regionData);\n                return regionData;\n            }\n        },\n        champion: {\n            type: champion,\n            args: {\n                name: { type: GraphQLString },\n                key: { type: GraphQLString }\n            },\n            resolve: (root, args) =>\n                axios\n                    .get(\n                        'http://ddragon.leagueoflegends.com/cdn/9.21.1/data/en_US/champion.json'\n                    )\n                    .then(res => {\n                        return Object.values(res.data.data).find(\n                            e => e.key === args.key\n                        );\n                    })\n        },\n        champions: {\n            type: new GraphQLList(champion),\n            resolve: (root, args) =>\n                axios\n                    .get(\n                        `http://ddragon.leagueoflegends.com/cdn/9.21.1/data/en_US/champion.json`\n                    )\n                    .then(res => {\n                        return Object.values(res.data.data);\n                    })\n        }\n    }\n});\n\nexport default new GraphQLSchema({\n    query: queryType\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573410556003
  },
  "{\"sourceRoot\":\"/home/nhung/Desktop/reactjs/game_stats_app/nodejs/schema/type\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/nhung/Desktop/reactjs/game_stats_app/nodejs\",\"filename\":\"/home/nhung/Desktop/reactjs/game_stats_app/nodejs/schema/type/champion.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/nhung/Desktop/reactjs/game_stats_app/nodejs\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs/schema/type",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs",
      "filename": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs/schema/type/champion.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs/schema/type/champion.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs/schema/type/champion.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs/schema/type",
        "sourceFileName": "champion.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _graphql = require(\"graphql\");\n\nvar info = new _graphql.GraphQLObjectType({\n  name: 'championInfo',\n  fields: function fields() {\n    return {\n      attack: {\n        type: _graphql.GraphQLInt\n      },\n      defense: {\n        type: _graphql.GraphQLInt\n      },\n      magic: {\n        type: _graphql.GraphQLInt\n      },\n      difficulty: {\n        type: _graphql.GraphQLInt\n      }\n    };\n  }\n});\nvar stats = new _graphql.GraphQLObjectType({\n  name: 'stats',\n  fields: function fields() {\n    return {\n      hp: {\n        type: _graphql.GraphQLFloat\n      },\n      hpperlevel: {\n        type: _graphql.GraphQLFloat\n      },\n      mp: {\n        type: _graphql.GraphQLFloat\n      },\n      mpperlevel: {\n        type: _graphql.GraphQLFloat\n      },\n      movespeed: {\n        type: _graphql.GraphQLFloat\n      },\n      armor: {\n        type: _graphql.GraphQLFloat\n      },\n      armorperlevel: {\n        type: _graphql.GraphQLFloat\n      },\n      spellblock: {\n        type: _graphql.GraphQLFloat\n      },\n      spellblockperlevel: {\n        type: _graphql.GraphQLFloat\n      },\n      attackrange: {\n        type: _graphql.GraphQLFloat\n      },\n      hpregen: {\n        type: _graphql.GraphQLFloat\n      },\n      hpregenperlevel: {\n        type: _graphql.GraphQLFloat\n      },\n      mpregen: {\n        type: _graphql.GraphQLFloat\n      },\n      mpregenperlevel: {\n        type: _graphql.GraphQLFloat\n      },\n      crit: {\n        type: _graphql.GraphQLFloat\n      },\n      critperlevel: {\n        type: _graphql.GraphQLFloat\n      },\n      attackdamage: {\n        type: _graphql.GraphQLFloat\n      },\n      attackdamageperlevel: {\n        type: _graphql.GraphQLFloat\n      },\n      attackspeedperlevel: {\n        type: _graphql.GraphQLFloat\n      },\n      attackspeed: {\n        type: _graphql.GraphQLFloat\n      }\n    };\n  }\n});\n\nvar _default = new _graphql.GraphQLObjectType({\n  name: 'champion',\n  fields: function fields() {\n    return {\n      name: {\n        type: _graphql.GraphQLString\n      },\n      key: {\n        type: _graphql.GraphQLString\n      },\n      info: {\n        type: info\n      },\n      tags: {\n        type: (0, _graphql.GraphQLList)(_graphql.GraphQLString)\n      },\n      stats: {\n        type: stats\n      }\n    };\n  }\n}); //tags: { type: GraphQLList },\n\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYW1waW9uLmpzIl0sIm5hbWVzIjpbImluZm8iLCJHcmFwaFFMT2JqZWN0VHlwZSIsIm5hbWUiLCJmaWVsZHMiLCJhdHRhY2siLCJ0eXBlIiwiR3JhcGhRTEludCIsImRlZmVuc2UiLCJtYWdpYyIsImRpZmZpY3VsdHkiLCJzdGF0cyIsImhwIiwiR3JhcGhRTEZsb2F0IiwiaHBwZXJsZXZlbCIsIm1wIiwibXBwZXJsZXZlbCIsIm1vdmVzcGVlZCIsImFybW9yIiwiYXJtb3JwZXJsZXZlbCIsInNwZWxsYmxvY2siLCJzcGVsbGJsb2NrcGVybGV2ZWwiLCJhdHRhY2tyYW5nZSIsImhwcmVnZW4iLCJocHJlZ2VucGVybGV2ZWwiLCJtcHJlZ2VuIiwibXByZWdlbnBlcmxldmVsIiwiY3JpdCIsImNyaXRwZXJsZXZlbCIsImF0dGFja2RhbWFnZSIsImF0dGFja2RhbWFnZXBlcmxldmVsIiwiYXR0YWNrc3BlZWRwZXJsZXZlbCIsImF0dGFja3NwZWVkIiwiR3JhcGhRTFN0cmluZyIsImtleSIsInRhZ3MiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFVQSxJQUFNQSxJQUFJLEdBQUcsSUFBSUMsMEJBQUosQ0FBc0I7QUFDL0JDLEVBQUFBLElBQUksRUFBRSxjQUR5QjtBQUUvQkMsRUFBQUEsTUFBTSxFQUFFO0FBQUEsV0FBTztBQUNYQyxNQUFBQSxNQUFNLEVBQUU7QUFBRUMsUUFBQUEsSUFBSSxFQUFFQztBQUFSLE9BREc7QUFFWEMsTUFBQUEsT0FBTyxFQUFFO0FBQUVGLFFBQUFBLElBQUksRUFBRUM7QUFBUixPQUZFO0FBR1hFLE1BQUFBLEtBQUssRUFBRTtBQUFFSCxRQUFBQSxJQUFJLEVBQUVDO0FBQVIsT0FISTtBQUlYRyxNQUFBQSxVQUFVLEVBQUU7QUFBRUosUUFBQUEsSUFBSSxFQUFFQztBQUFSO0FBSkQsS0FBUDtBQUFBO0FBRnVCLENBQXRCLENBQWI7QUFVQSxJQUFNSSxLQUFLLEdBQUcsSUFBSVQsMEJBQUosQ0FBc0I7QUFDaENDLEVBQUFBLElBQUksRUFBRSxPQUQwQjtBQUVoQ0MsRUFBQUEsTUFBTSxFQUFFO0FBQUEsV0FBTztBQUNYUSxNQUFBQSxFQUFFLEVBQUU7QUFBRU4sUUFBQUEsSUFBSSxFQUFFTztBQUFSLE9BRE87QUFFWEMsTUFBQUEsVUFBVSxFQUFFO0FBQUVSLFFBQUFBLElBQUksRUFBRU87QUFBUixPQUZEO0FBR1hFLE1BQUFBLEVBQUUsRUFBRTtBQUFFVCxRQUFBQSxJQUFJLEVBQUVPO0FBQVIsT0FITztBQUlYRyxNQUFBQSxVQUFVLEVBQUU7QUFBRVYsUUFBQUEsSUFBSSxFQUFFTztBQUFSLE9BSkQ7QUFLWEksTUFBQUEsU0FBUyxFQUFFO0FBQUVYLFFBQUFBLElBQUksRUFBRU87QUFBUixPQUxBO0FBTVhLLE1BQUFBLEtBQUssRUFBRTtBQUFFWixRQUFBQSxJQUFJLEVBQUVPO0FBQVIsT0FOSTtBQU9YTSxNQUFBQSxhQUFhLEVBQUU7QUFBRWIsUUFBQUEsSUFBSSxFQUFFTztBQUFSLE9BUEo7QUFRWE8sTUFBQUEsVUFBVSxFQUFFO0FBQUVkLFFBQUFBLElBQUksRUFBRU87QUFBUixPQVJEO0FBU1hRLE1BQUFBLGtCQUFrQixFQUFFO0FBQUVmLFFBQUFBLElBQUksRUFBRU87QUFBUixPQVRUO0FBVVhTLE1BQUFBLFdBQVcsRUFBRTtBQUFFaEIsUUFBQUEsSUFBSSxFQUFFTztBQUFSLE9BVkY7QUFXWFUsTUFBQUEsT0FBTyxFQUFFO0FBQUVqQixRQUFBQSxJQUFJLEVBQUVPO0FBQVIsT0FYRTtBQVlYVyxNQUFBQSxlQUFlLEVBQUU7QUFBRWxCLFFBQUFBLElBQUksRUFBRU87QUFBUixPQVpOO0FBYVhZLE1BQUFBLE9BQU8sRUFBRTtBQUFFbkIsUUFBQUEsSUFBSSxFQUFFTztBQUFSLE9BYkU7QUFjWGEsTUFBQUEsZUFBZSxFQUFFO0FBQUVwQixRQUFBQSxJQUFJLEVBQUVPO0FBQVIsT0FkTjtBQWVYYyxNQUFBQSxJQUFJLEVBQUU7QUFBRXJCLFFBQUFBLElBQUksRUFBRU87QUFBUixPQWZLO0FBZ0JYZSxNQUFBQSxZQUFZLEVBQUU7QUFBRXRCLFFBQUFBLElBQUksRUFBRU87QUFBUixPQWhCSDtBQWlCWGdCLE1BQUFBLFlBQVksRUFBRTtBQUFFdkIsUUFBQUEsSUFBSSxFQUFFTztBQUFSLE9BakJIO0FBa0JYaUIsTUFBQUEsb0JBQW9CLEVBQUU7QUFBRXhCLFFBQUFBLElBQUksRUFBRU87QUFBUixPQWxCWDtBQW1CWGtCLE1BQUFBLG1CQUFtQixFQUFFO0FBQUV6QixRQUFBQSxJQUFJLEVBQUVPO0FBQVIsT0FuQlY7QUFvQlhtQixNQUFBQSxXQUFXLEVBQUU7QUFBRTFCLFFBQUFBLElBQUksRUFBRU87QUFBUjtBQXBCRixLQUFQO0FBQUE7QUFGd0IsQ0FBdEIsQ0FBZDs7ZUEwQmUsSUFBSVgsMEJBQUosQ0FBc0I7QUFDakNDLEVBQUFBLElBQUksRUFBRSxVQUQyQjtBQUVqQ0MsRUFBQUEsTUFBTSxFQUFFO0FBQUEsV0FBTztBQUNYRCxNQUFBQSxJQUFJLEVBQUU7QUFBRUcsUUFBQUEsSUFBSSxFQUFFMkI7QUFBUixPQURLO0FBRVhDLE1BQUFBLEdBQUcsRUFBRTtBQUFFNUIsUUFBQUEsSUFBSSxFQUFFMkI7QUFBUixPQUZNO0FBR1hoQyxNQUFBQSxJQUFJLEVBQUU7QUFDRkssUUFBQUEsSUFBSSxFQUFFTDtBQURKLE9BSEs7QUFNWGtDLE1BQUFBLElBQUksRUFBRTtBQUFFN0IsUUFBQUEsSUFBSSxFQUFFLDBCQUFZMkIsc0JBQVo7QUFBUixPQU5LO0FBT1h0QixNQUFBQSxLQUFLLEVBQUU7QUFDSEwsUUFBQUEsSUFBSSxFQUFFSztBQURIO0FBUEksS0FBUDtBQUFBO0FBRnlCLENBQXRCLEMsRUFlZiIsInNvdXJjZVJvb3QiOiIvaG9tZS9uaHVuZy9EZXNrdG9wL3JlYWN0anMvZ2FtZV9zdGF0c19hcHAvbm9kZWpzL3NjaGVtYS90eXBlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBHcmFwaFFMSW50LFxuICAgIEdyYXBoUUxMaXN0LFxuICAgIEdyYXBoUUxOb25OdWxsLFxuICAgIEdyYXBoUUxPYmplY3RUeXBlLFxuICAgIEdyYXBoUUxTY2hlbWEsXG4gICAgR3JhcGhRTFN0cmluZyxcbiAgICBHcmFwaFFMRmxvYXRcbn0gZnJvbSAnZ3JhcGhxbCc7XG5cbmNvbnN0IGluZm8gPSBuZXcgR3JhcGhRTE9iamVjdFR5cGUoe1xuICAgIG5hbWU6ICdjaGFtcGlvbkluZm8nLFxuICAgIGZpZWxkczogKCkgPT4gKHtcbiAgICAgICAgYXR0YWNrOiB7IHR5cGU6IEdyYXBoUUxJbnQgfSxcbiAgICAgICAgZGVmZW5zZTogeyB0eXBlOiBHcmFwaFFMSW50IH0sXG4gICAgICAgIG1hZ2ljOiB7IHR5cGU6IEdyYXBoUUxJbnQgfSxcbiAgICAgICAgZGlmZmljdWx0eTogeyB0eXBlOiBHcmFwaFFMSW50IH1cbiAgICB9KVxufSk7XG5cbmNvbnN0IHN0YXRzID0gbmV3IEdyYXBoUUxPYmplY3RUeXBlKHtcbiAgICBuYW1lOiAnc3RhdHMnLFxuICAgIGZpZWxkczogKCkgPT4gKHtcbiAgICAgICAgaHA6IHsgdHlwZTogR3JhcGhRTEZsb2F0IH0sXG4gICAgICAgIGhwcGVybGV2ZWw6IHsgdHlwZTogR3JhcGhRTEZsb2F0IH0sXG4gICAgICAgIG1wOiB7IHR5cGU6IEdyYXBoUUxGbG9hdCB9LFxuICAgICAgICBtcHBlcmxldmVsOiB7IHR5cGU6IEdyYXBoUUxGbG9hdCB9LFxuICAgICAgICBtb3Zlc3BlZWQ6IHsgdHlwZTogR3JhcGhRTEZsb2F0IH0sXG4gICAgICAgIGFybW9yOiB7IHR5cGU6IEdyYXBoUUxGbG9hdCB9LFxuICAgICAgICBhcm1vcnBlcmxldmVsOiB7IHR5cGU6IEdyYXBoUUxGbG9hdCB9LFxuICAgICAgICBzcGVsbGJsb2NrOiB7IHR5cGU6IEdyYXBoUUxGbG9hdCB9LFxuICAgICAgICBzcGVsbGJsb2NrcGVybGV2ZWw6IHsgdHlwZTogR3JhcGhRTEZsb2F0IH0sXG4gICAgICAgIGF0dGFja3JhbmdlOiB7IHR5cGU6IEdyYXBoUUxGbG9hdCB9LFxuICAgICAgICBocHJlZ2VuOiB7IHR5cGU6IEdyYXBoUUxGbG9hdCB9LFxuICAgICAgICBocHJlZ2VucGVybGV2ZWw6IHsgdHlwZTogR3JhcGhRTEZsb2F0IH0sXG4gICAgICAgIG1wcmVnZW46IHsgdHlwZTogR3JhcGhRTEZsb2F0IH0sXG4gICAgICAgIG1wcmVnZW5wZXJsZXZlbDogeyB0eXBlOiBHcmFwaFFMRmxvYXQgfSxcbiAgICAgICAgY3JpdDogeyB0eXBlOiBHcmFwaFFMRmxvYXQgfSxcbiAgICAgICAgY3JpdHBlcmxldmVsOiB7IHR5cGU6IEdyYXBoUUxGbG9hdCB9LFxuICAgICAgICBhdHRhY2tkYW1hZ2U6IHsgdHlwZTogR3JhcGhRTEZsb2F0IH0sXG4gICAgICAgIGF0dGFja2RhbWFnZXBlcmxldmVsOiB7IHR5cGU6IEdyYXBoUUxGbG9hdCB9LFxuICAgICAgICBhdHRhY2tzcGVlZHBlcmxldmVsOiB7IHR5cGU6IEdyYXBoUUxGbG9hdCB9LFxuICAgICAgICBhdHRhY2tzcGVlZDogeyB0eXBlOiBHcmFwaFFMRmxvYXQgfVxuICAgIH0pXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgbmV3IEdyYXBoUUxPYmplY3RUeXBlKHtcbiAgICBuYW1lOiAnY2hhbXBpb24nLFxuICAgIGZpZWxkczogKCkgPT4gKHtcbiAgICAgICAgbmFtZTogeyB0eXBlOiBHcmFwaFFMU3RyaW5nIH0sXG4gICAgICAgIGtleTogeyB0eXBlOiBHcmFwaFFMU3RyaW5nIH0sXG4gICAgICAgIGluZm86IHtcbiAgICAgICAgICAgIHR5cGU6IGluZm9cbiAgICAgICAgfSxcbiAgICAgICAgdGFnczogeyB0eXBlOiBHcmFwaFFMTGlzdChHcmFwaFFMU3RyaW5nKSB9LFxuICAgICAgICBzdGF0czoge1xuICAgICAgICAgICAgdHlwZTogc3RhdHNcbiAgICAgICAgfVxuICAgIH0pXG59KTtcblxuLy90YWdzOiB7IHR5cGU6IEdyYXBoUUxMaXN0IH0sXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "champion.js"
      ],
      "names": [
        "info",
        "GraphQLObjectType",
        "name",
        "fields",
        "attack",
        "type",
        "GraphQLInt",
        "defense",
        "magic",
        "difficulty",
        "stats",
        "hp",
        "GraphQLFloat",
        "hpperlevel",
        "mp",
        "mpperlevel",
        "movespeed",
        "armor",
        "armorperlevel",
        "spellblock",
        "spellblockperlevel",
        "attackrange",
        "hpregen",
        "hpregenperlevel",
        "mpregen",
        "mpregenperlevel",
        "crit",
        "critperlevel",
        "attackdamage",
        "attackdamageperlevel",
        "attackspeedperlevel",
        "attackspeed",
        "GraphQLString",
        "key",
        "tags"
      ],
      "mappings": ";;;;;;;AAAA;;AAUA,IAAMA,IAAI,GAAG,IAAIC,0BAAJ,CAAsB;AAC/BC,EAAAA,IAAI,EAAE,cADyB;AAE/BC,EAAAA,MAAM,EAAE;AAAA,WAAO;AACXC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAEC;AAAR,OADG;AAEXC,MAAAA,OAAO,EAAE;AAAEF,QAAAA,IAAI,EAAEC;AAAR,OAFE;AAGXE,MAAAA,KAAK,EAAE;AAAEH,QAAAA,IAAI,EAAEC;AAAR,OAHI;AAIXG,MAAAA,UAAU,EAAE;AAAEJ,QAAAA,IAAI,EAAEC;AAAR;AAJD,KAAP;AAAA;AAFuB,CAAtB,CAAb;AAUA,IAAMI,KAAK,GAAG,IAAIT,0BAAJ,CAAsB;AAChCC,EAAAA,IAAI,EAAE,OAD0B;AAEhCC,EAAAA,MAAM,EAAE;AAAA,WAAO;AACXQ,MAAAA,EAAE,EAAE;AAAEN,QAAAA,IAAI,EAAEO;AAAR,OADO;AAEXC,MAAAA,UAAU,EAAE;AAAER,QAAAA,IAAI,EAAEO;AAAR,OAFD;AAGXE,MAAAA,EAAE,EAAE;AAAET,QAAAA,IAAI,EAAEO;AAAR,OAHO;AAIXG,MAAAA,UAAU,EAAE;AAAEV,QAAAA,IAAI,EAAEO;AAAR,OAJD;AAKXI,MAAAA,SAAS,EAAE;AAAEX,QAAAA,IAAI,EAAEO;AAAR,OALA;AAMXK,MAAAA,KAAK,EAAE;AAAEZ,QAAAA,IAAI,EAAEO;AAAR,OANI;AAOXM,MAAAA,aAAa,EAAE;AAAEb,QAAAA,IAAI,EAAEO;AAAR,OAPJ;AAQXO,MAAAA,UAAU,EAAE;AAAEd,QAAAA,IAAI,EAAEO;AAAR,OARD;AASXQ,MAAAA,kBAAkB,EAAE;AAAEf,QAAAA,IAAI,EAAEO;AAAR,OATT;AAUXS,MAAAA,WAAW,EAAE;AAAEhB,QAAAA,IAAI,EAAEO;AAAR,OAVF;AAWXU,MAAAA,OAAO,EAAE;AAAEjB,QAAAA,IAAI,EAAEO;AAAR,OAXE;AAYXW,MAAAA,eAAe,EAAE;AAAElB,QAAAA,IAAI,EAAEO;AAAR,OAZN;AAaXY,MAAAA,OAAO,EAAE;AAAEnB,QAAAA,IAAI,EAAEO;AAAR,OAbE;AAcXa,MAAAA,eAAe,EAAE;AAAEpB,QAAAA,IAAI,EAAEO;AAAR,OAdN;AAeXc,MAAAA,IAAI,EAAE;AAAErB,QAAAA,IAAI,EAAEO;AAAR,OAfK;AAgBXe,MAAAA,YAAY,EAAE;AAAEtB,QAAAA,IAAI,EAAEO;AAAR,OAhBH;AAiBXgB,MAAAA,YAAY,EAAE;AAAEvB,QAAAA,IAAI,EAAEO;AAAR,OAjBH;AAkBXiB,MAAAA,oBAAoB,EAAE;AAAExB,QAAAA,IAAI,EAAEO;AAAR,OAlBX;AAmBXkB,MAAAA,mBAAmB,EAAE;AAAEzB,QAAAA,IAAI,EAAEO;AAAR,OAnBV;AAoBXmB,MAAAA,WAAW,EAAE;AAAE1B,QAAAA,IAAI,EAAEO;AAAR;AApBF,KAAP;AAAA;AAFwB,CAAtB,CAAd;;eA0Be,IAAIX,0BAAJ,CAAsB;AACjCC,EAAAA,IAAI,EAAE,UAD2B;AAEjCC,EAAAA,MAAM,EAAE;AAAA,WAAO;AACXD,MAAAA,IAAI,EAAE;AAAEG,QAAAA,IAAI,EAAE2B;AAAR,OADK;AAEXC,MAAAA,GAAG,EAAE;AAAE5B,QAAAA,IAAI,EAAE2B;AAAR,OAFM;AAGXhC,MAAAA,IAAI,EAAE;AACFK,QAAAA,IAAI,EAAEL;AADJ,OAHK;AAMXkC,MAAAA,IAAI,EAAE;AAAE7B,QAAAA,IAAI,EAAE,0BAAY2B,sBAAZ;AAAR,OANK;AAOXtB,MAAAA,KAAK,EAAE;AACHL,QAAAA,IAAI,EAAEK;AADH;AAPI,KAAP;AAAA;AAFyB,CAAtB,C,EAef",
      "sourceRoot": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs/schema/type",
      "sourcesContent": [
        "import {\n    GraphQLInt,\n    GraphQLList,\n    GraphQLNonNull,\n    GraphQLObjectType,\n    GraphQLSchema,\n    GraphQLString,\n    GraphQLFloat\n} from 'graphql';\n\nconst info = new GraphQLObjectType({\n    name: 'championInfo',\n    fields: () => ({\n        attack: { type: GraphQLInt },\n        defense: { type: GraphQLInt },\n        magic: { type: GraphQLInt },\n        difficulty: { type: GraphQLInt }\n    })\n});\n\nconst stats = new GraphQLObjectType({\n    name: 'stats',\n    fields: () => ({\n        hp: { type: GraphQLFloat },\n        hpperlevel: { type: GraphQLFloat },\n        mp: { type: GraphQLFloat },\n        mpperlevel: { type: GraphQLFloat },\n        movespeed: { type: GraphQLFloat },\n        armor: { type: GraphQLFloat },\n        armorperlevel: { type: GraphQLFloat },\n        spellblock: { type: GraphQLFloat },\n        spellblockperlevel: { type: GraphQLFloat },\n        attackrange: { type: GraphQLFloat },\n        hpregen: { type: GraphQLFloat },\n        hpregenperlevel: { type: GraphQLFloat },\n        mpregen: { type: GraphQLFloat },\n        mpregenperlevel: { type: GraphQLFloat },\n        crit: { type: GraphQLFloat },\n        critperlevel: { type: GraphQLFloat },\n        attackdamage: { type: GraphQLFloat },\n        attackdamageperlevel: { type: GraphQLFloat },\n        attackspeedperlevel: { type: GraphQLFloat },\n        attackspeed: { type: GraphQLFloat }\n    })\n});\n\nexport default new GraphQLObjectType({\n    name: 'champion',\n    fields: () => ({\n        name: { type: GraphQLString },\n        key: { type: GraphQLString },\n        info: {\n            type: info\n        },\n        tags: { type: GraphQLList(GraphQLString) },\n        stats: {\n            type: stats\n        }\n    })\n});\n\n//tags: { type: GraphQLList },\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573221990408
  },
  "{\"sourceRoot\":\"/home/nhung/Desktop/reactjs/game_stats_app/nodejs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/nhung/Desktop/reactjs/game_stats_app/nodejs\",\"filename\":\"/home/nhung/Desktop/reactjs/game_stats_app/nodejs/config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/nhung/Desktop/reactjs/game_stats_app/nodejs\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs",
      "filename": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs/config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs/config.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs/config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.riotApiKey = void 0;\nvar riotApiKey = 'RGAPI-xxxxxx';\nexports.riotApiKey = riotApiKey;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJyaW90QXBpS2V5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxJQUFNQSxVQUFVLEdBQUcsY0FBbkIiLCJzb3VyY2VSb290IjoiL2hvbWUvbmh1bmcvRGVza3RvcC9yZWFjdGpzL2dhbWVfc3RhdHNfYXBwL25vZGVqcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCByaW90QXBpS2V5ID0gJ1JHQVBJLXh4eHh4eCc7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "riotApiKey"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,UAAU,GAAG,cAAnB",
      "sourceRoot": "/home/nhung/Desktop/reactjs/game_stats_app/nodejs",
      "sourcesContent": [
        "export const riotApiKey = 'RGAPI-xxxxxx';\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573410793501
  }
}